{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Badge.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/pages/logold.js"],"names":["Badge","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","prefix","createElement","displayName","defaultProps","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","apply","concat","logQuery","LogPage","md","logStyles","toptitle","to","topics","size","query","render","data","allMarkdownRemark","edges","map","node","post","fields","slug","title","frontmatter","date","tags","tag","kebabCase"],"mappings":"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","file":"component---src-pages-logold-js-31ab817341387c3c0c9d.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import React from 'react' \nimport Layout from '../components/layout'\nimport { graphql, StaticQuery } from 'gatsby'\nimport logStyles from './log.module.scss'\nimport { Link } from 'gatsby'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Badge, Card, Col, Row, Container } from 'react-bootstrap'\nimport kebabCase from 'lodash/kebabCase'\nimport container from '../styles/pageStyle.scss'\n\nconst LogPage = () => (\n    <Layout>\n        <container>\n    <Row>\n        \n        <Col md=\"8\">\n        <h1 className={logStyles.toptitle}>Log</h1> \n        </Col>\n        \n        <Col md =\"2\">\n        <Link to='/tags/' className={logStyles.topics}>\n                <button size=\"sm\">topics</button>\n        </Link>\n        </Col>\n        \n\n       \n\n    </Row>\n    <Row>\n    \n    <Col>\n    <StaticQuery \n        query={logQuery} \n        render={data => {\n            return(\n                <div>\n                    {data.allMarkdownRemark.edges.map(({node}) => (\n                        <li className={logStyles.post}>\n                            <Link to={`/log/${node.fields.slug}`}>\n\n                            </Link>\n                            <h1 className={logStyles.title}>\n                                    {node.frontmatter.title}\n                            </h1>\n\n                            <p className={logStyles.date}>\n                                {node.frontmatter.date}\n                            </p>\n\n                            <p>\n                            <div >\n                                    {node.frontmatter.tags.map(tag => (\n                                        <Link to={`/tags/${kebabCase(tag)}`}> \n                                            <Badge variant=\"dark\" className={logStyles.tags}>{tag}</Badge>{'  '}\n                                        </Link>\n                                    ))}\n                            </div>\n                            </p>\n\n                            <Link to={`/log/${node.fields.slug}`} className=\"btn btn-outline-secondary btn-sm float right text-uppercase\">Read More</Link>\n\n\n\n\n                        </li>\n                                \n                    ))}\n                </div>\n        )\n    }}\n    />\n    </Col>\n   </Row>\n   </container>\n </Layout>\n)\n\nconst logQuery = graphql`\n    query {\n        allMarkdownRemark ( sort: {fields: [frontmatter___date], order: DESC}\n            filter: {\n                frontmatter: {\n                    sourcetype: {\n                        eq: \"log\"\n                    }\n                }\n            }\n        ) {\n            edges {\n                node {\n                    excerpt(format: MARKDOWN)\n                    frontmatter {\n                        title\n                        date\n                        tags\n                        \n                    \n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`\n\n\nexport default LogPage\n"],"sourceRoot":""}