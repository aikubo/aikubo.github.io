{"version":3,"sources":["webpack:///./src/pages/log.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/footer.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["LogPage","data","className","logStyles","posts","allMarkdownRemark","edges","map","edge","post","to","node","fields","slug","frontmatter","title","date","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","Footer","footerStyles","footer","site","siteMetadata","author","Sidebar","sidebarStyles","sidebar","navList","navItem","activeClassName","activeNavItem","Layout","props","layoutStyles","container","content","children"],"mappings":"kKAwDeA,UAnDC,WACZ,IAAMC,EAAI,OA0BV,OACI,kBAAC,IAAD,KACI,mCACA,6BACA,wBAAIC,UAAWC,IAAUC,OACpBH,EAAKI,kBAAkBC,MAAMC,KAAI,SAACC,GAC/B,OACI,wBAAIN,UAAWC,IAAUM,MACrB,kBAAC,IAAD,CAAMC,GAAE,QAAUF,EAAKG,KAAKC,OAAOC,MAC/B,4BACKL,EAAKG,KAAKG,YAAYC,OAE3B,2BACKP,EAAKG,KAAKG,YAAYE,e,oBC7C3D,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,iCCA/C,qFAcyBK,QAAOC,QAELC,IAAMC,cAAc,K,uRCMhCC,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEJ,IAAMK,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,gFCcIC,EAjBA,WACX,IAAM/B,EAAI,OASV,OACI,4BAAQC,UAAW+B,IAAaC,QAC5B,yCAAejC,EAAKkC,KAAKC,aAAaC,OAAtC,c,+DCgCGC,EA3CC,WACZ,IAAMrC,EAAI,OAEV,OACI,4BAAQC,UAAWqC,IAAcC,SAC7B,4BACI,kBAAC,IAAD,CAAMtC,UAAWqC,IAAcxB,OAC1Bd,EAAKkC,KAAKC,aAAarB,QAGhC,6BACI,wBAAIb,UAAWqC,IAAcE,SACzB,4BACI,kBAAC,IAAD,CAAMvC,UAAWqC,IAAcG,QAASC,gBAAiBJ,IAAcK,cAAelC,GAAG,KAAzF,SAIJ,4BACI,kBAAC,IAAD,CAAMR,UAAWqC,IAAcG,QAASC,gBAAiBJ,IAAcK,cAAelC,GAAG,aAAzF,aAIJ,4BACI,kBAAC,IAAD,CAAMR,UAAWqC,IAAcG,QAASC,gBAAiBJ,IAAcK,cAAelC,GAAG,QAAzF,QAIJ,4BACI,kBAAC,IAAD,CAAMR,UAAWqC,IAAcG,QAASC,gBAAiBJ,IAAcK,cAAelC,GAAG,WAAzF,WAIJ,4BACI,kBAAC,IAAD,CAAMR,UAAWqC,IAAcG,QAASC,gBAAiBJ,IAAcK,cAAelC,GAAG,YAAzF,gBCpBTmC,IAZA,SAACC,GACZ,OACI,yBAAK5C,UAAW6C,IAAaC,WACzB,kBAAC,EAAD,MACA,yBAAK9C,UAAW6C,IAAaE,SACxBH,EAAMI,UAEX,kBAAC,EAAD,S","file":"component---src-pages-log-js-d61b7ad38d531d291000.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { Link, graphql, useStaticQuery } from 'gatsby'\nimport logStyles from './log.module.scss'\n\nconst LogPage = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            allMarkdownRemark (\n                filter: {\n                    frontmatter: {\n                        sourcetype: {\n                            eq: \"log\"\n                        }\n                    }\n                }\n            ) {\n                edges {\n                    node {\n                        frontmatter {\n                            title\n                            date\n                        }\n                        fields {\n                            slug\n                        }\n                    }\n                }\n            }\n        }\n    `)\n\n    return (\n        <Layout>\n            <h1>Log</h1>\n            <hr />\n            <ol className={logStyles.posts}>\n                {data.allMarkdownRemark.edges.map((edge) => {\n                    return (\n                        <li className={logStyles.post}>\n                            <Link to={`/log/${edge.node.fields.slug}`}>\n                                <h2>\n                                    {edge.node.frontmatter.title}\n                                </h2>\n                                <p>\n                                    {edge.node.frontmatter.date}\n                                </p>\n                            </Link>\n                        </li>\n                    )\n                })}\n            </ol>\n        </Layout>\n    )\n}\n\nexport default LogPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport footerStyles from './footer.module.scss'\n\nconst Footer = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    author\n                }\n            }\n        }\n    `)\n    return (\n        <footer className={footerStyles.footer}>\n            <p>Created by {data.site.siteMetadata.author}, Â© 2019</p>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport { Link, graphql, useStaticQuery } from 'gatsby'\n\nimport sidebarStyles from './sidebar.module.scss'\n\nconst Sidebar = () => {\n    const data = useStaticQuery(graphql`query { site { siteMetadata { title } } }`)\n\n    return (\n        <header className={sidebarStyles.sidebar}>\n            <h1>\n                <Link className={sidebarStyles.title}>\n                    {data.site.siteMetadata.title}\n                </Link>\n            </h1>\n            <nav>\n                <ul className={sidebarStyles.navList}>\n                    <li>\n                        <Link className={sidebarStyles.navItem} activeClassName={sidebarStyles.activeNavItem} to='/'>\n                            Home\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={sidebarStyles.navItem} activeClassName={sidebarStyles.activeNavItem} to='/research'>\n                            Research\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={sidebarStyles.navItem} activeClassName={sidebarStyles.activeNavItem} to='/log'>\n                            Log\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={sidebarStyles.navItem} activeClassName={sidebarStyles.activeNavItem} to='/resume'>\n                            Resume\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={sidebarStyles.navItem} activeClassName={sidebarStyles.activeNavItem} to='/contact'>\n                            Contact\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Sidebar","import React from 'react'\nimport Footer from './footer'\nimport '../styles/index.scss'\nimport layoutStyles from './layout.module.scss'\nimport Sidebar from './sidebar'\n\nconst Layout = (props) => {\n    return (\n        <div className={layoutStyles.container}> \n            <Sidebar />           \n            <div className={layoutStyles.content}>\n                {props.children}\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Layout"],"sourceRoot":""}